name: Update PR Status and Generate Report
on:
  status

jobs:
  update-pr-status-and-report:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Repository Info
        run: |
          echo "REPO=${{ github.repository }}" >> $GITHUB_ENV
          echo "SHA=${{ github.sha }}" >> $GITHUB_ENV

      - name: Extract PR Number
        run: |
          pr=$(curl -s -H "Authorization: Bearer ${{ secrets.SPUR_STATUS_UPDATE_TOKEN }}" \
               "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}" | \
               jq -r '.pull_request.url' | cut -d'/' -f7)
          echo "PR_NUMBER=$pr" >> $GITHUB_ENV

      - name: Collect All Statuses
        run: |
          statuses=$(curl -s -H "Authorization: Bearer ${{ secrets.SPUR_STATUS_UPDATE_TOKEN }}" \
                     "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/status")
          echo "STATUSES<<EOF" >> $GITHUB_ENV
          echo "$statuses" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Generate Report
        run: |
          total_count=$(echo "$STATUSES" | jq '.total_count')
          success_count=$(echo "$STATUSES" | jq '[.statuses[] | select(.state == "success")] | length')
          
          report="Spur \n\n"
          report+="Test Report: $success_count/$total_count successful.\n\n"
          report+="| description | status | details |\n"
          report+="|-------------|--------|--------|\n"
          
          while read -r line; do
            context=$(echo "$line" | jq -r '.context')
            state=$(echo "$line" | jq -r '.state')
            description=$(echo "$line" | jq -r '.description')
            url=$(echo "$line" | jq -r '.target_url')
            
            if [ "$state" == "success" ]; then
              status_icon="Passed ✅"
            else
              status_icon="Failed ❌"
            fi
            
            report+="| $description | $status_icon | [click]($url) |\n"
          done < <(echo "$STATUSES" | jq -c '.statuses[]')
          
          report+="\ncommit sha: ${{ github.sha }}"
          
          echo "REPORT<<EOF" >> $GITHUB_ENV
          echo "$report" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Comment PR with Report
        env:
          GITHUB_TOKEN: ${{ secrets.SPUR_STATUS_UPDATE_TOKEN }}
        run: |
          comment_url=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
                        "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments" | \
                        jq -r '.[] | select(.body | startswith("Spur")) | .url' | head -n1)
          
          if [ -n "$comment_url" ]; then
            curl -X PATCH -H "Authorization: Bearer $GITHUB_TOKEN" \
                 -H "Content-Type: application/json" \
                 -d "{\"body\": $(echo "$REPORT" | jq -Rs .)}" \
                 "$comment_url"
          else
            curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
                 -H "Content-Type: application/json" \
                 -d "{\"body\": $(echo "$REPORT" | jq -Rs .)}" \
                 "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments"
          fi
