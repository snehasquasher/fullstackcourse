name: Trigger Spur Webhook on Push ðŸ””!

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  trigger_webhook:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Vercel Preview
        uses: patrickedqvist/wait-for-vercel-preview@v1.3.2
        id: waitForVercelPreview
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 300
          check_interval: 10

      - name: ðŸ“¡ Curl Request to Trigger TestSuites on Spur
        env:
          VERCEL_PREVIEW_URL: ${{ steps.waitForVercelPreview.outputs.url }}
        run: |
          if [ -z "$VERCEL_PREVIEW_URL" ]; then
            echo "No Vercel preview URL found. Using default URL."
            OVERRIDE_URL="https://your-default-production-url.com"
          else
            echo "Using Vercel preview URL: $VERCEL_PREVIEW_URL"
            OVERRIDE_URL="$VERCEL_PREVIEW_URL"
          fi

          curl -X POST \
          -H "Content-Type: application/json" \
          -H "SPUR_GITHUB_KEY: U2FsdGVkX1/9Z6wQoYKAmLroZ0OC5TajFdZqyhjS+a/YzV5L1CTjJdQMEaDGckfL" \
          -H "sha: ${{ github.sha }}" \
          -H "repo: ${{ github.repository }}" \
          -H "override_url: $OVERRIDE_URL" \
          "https://spurserverstaging.azurewebsites.net/api/integrations/github/webhook" \
          -o response.txt -w "%{http_code}" > status.txt 2>&1 & CURL_PID=$!

          timeout=2400
          elapsed=0
          while kill -0 $CURL_PID 2>/dev/null; do
            if [ $elapsed -ge $timeout ]; then
              echo "Webhook trigger is still running after 40 minutes. Continuing..."
              break
            fi
            sleep 60
            elapsed=$((elapsed+60))
            minutes=$((elapsed / 60))
            echo "Still waiting for response... (${minutes} minutes elapsed)"
            if [ -s response.txt ]; then
              echo "Response received. Checking status..."
              break
            fi
          done

          if [ -s status.txt ]; then
            STATUS=$(cat status.txt)
            if [ "$STATUS" = "200" ]; then
              echo "Webhook triggered successfully!"
            else
              echo "Webhook trigger status: $STATUS"
            fi
            cat response.txt
          else
            echo "Webhook trigger is still running. Check logs for final status."
          fi

          # Always exit successfully
          exit 0
